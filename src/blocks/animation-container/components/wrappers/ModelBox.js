/**
	*
	* ModelBox Component.
	*
	*/

// Import wp dependencies
import { __ } from '@wordpress/i18n';
import { useBlockProps } from '@wordpress/block-editor';
import { useEffect, useRef } from '@wordpress/element';
// import { GLTFLoader } from "three/examples/jsm/loaders/GLTFLoader";
// import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';
// import * as THREE from 'three'
// import { Application } from '@splinetool/runtime';

// Import blpge dependencies
const {
	gspb_spacing_cssGen,
	aos_animation_cssGen,
	gspb_position_cssGen,
	gspb_csstransform_cssGen,
	gspb_responsive_cssGen,
	gspb_background_cssGen,
	gspb_Css_Final
} = gspblib.utilities;
const { gspb_cssGen } = gspblib.helpers;
const { AnimationRenderProps } = gspblib.collections;

const ModelBox = (props) => {

	const {
		attributes: {
			id,
			model_url,
			selected_object,
		},
	} = props;

	// let modelBoxId = `gspb_modelBox-id-${id}`;

	// // for styles applied by the user
	// let css_selector_by_user = `#${modelBoxId}`;
	// let css_wrapper = css_selector_by_user + ' .animationmodel';

	// // we should keep className generated by Gutenberg
	// let modelBoxClassName = `gspb_modelBox gs-t-model ${modelBoxId}`;
	
	return (
			<div
				style={{ display: 'flex' }}
				class='animationmodel' 
				id={`gs_spline_${id}`} 
				url={model_url}
			>
			</div>
	);

}

export default ModelBox;